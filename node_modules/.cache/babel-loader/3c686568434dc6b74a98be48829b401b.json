{"ast":null,"code":"var _jsxFileName = \"/home/anju/devel/css-box-shadow-app/src/Shape.js\";\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nimport Input from './Input';\nconst Container = styled.div`\n  padding: 30px;\n`;\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n`;\nconst Rectangle = styled.div`\n  width: ${props => props.isActive ? '300px' : '200px'};\n  height: ${props => props.isActive ? '200px' : '100px'};\n  border: 1px solid black;\n  background-color: ${props => props.isActive || props.isSelected ? 'black' : 'transparent'};\n  border-width: thin;\n  border-color: ${props => !props.isSelected && 'grey'};\n  box-shadow: ${props => props.isActive && props.boxShadow};\n`;\nconst RoundedRectangle = styled.div`\n  width: ${props => props.isActive ? '300px' : '200px'};\n  height: ${props => props.isActive ? '200px' : '100px'};\n  border: 1px solid black;\n  background-color: ${props => props.isActive || props.isSelected ? 'black' : 'transparent'};\n  border-width: thin;\n  border-color: ${props => !props.isSelected && 'grey'};\n  border-radius: 20px;\n  box-shadow: ${props => props.isActive && props.boxShadow};\n`;\nconst Circle = styled.div`\n  width: ${props => props.isActive ? '250px' : '100px'};\n  height: ${props => props.isActive ? '250px' : '100px'};\n  border: 1px solid black;\n  background-color: ${props => props.isActive || props.isSelected ? 'black' : 'transparent'};\n  border-width: thin;\n  border-color: ${props => !props.isSelected && 'grey'};\n  border-radius: 100%;\n  box-shadow: ${props => props.isActive && props.boxShadow};\n`;\nexport default (() => {\n  const [shapes, setShapes] = useState([{\n    id: 'rectangle',\n    Shape: Rectangle,\n    isSelected: true\n  }, {\n    id: 'rounded-rectangle',\n    Shape: RoundedRectangle,\n    isSelected: false\n  }, {\n    id: 'circle',\n    Shape: Circle,\n    isSelected: false\n  }]);\n  const [ActiveShape, setActiveShape] = useState(Rectangle);\n\n  const onClick = id => {\n    const updatedShape = shapes.map(item => {\n      if (item.id === id) {\n        setActiveShape(item.Shape);\n        return { ...item,\n          isSelected: true\n        };\n      } else {\n        return { ...item,\n          isSelected: false\n        };\n      }\n    });\n    setShapes(updatedShape);\n  };\n\n  const [xOffset, setXoffset] = useState(0);\n  const [yOffset, setYoffset] = useState(4);\n  const [blurRadius, setBlurRadius] = useState(0);\n  const [spread, setSpread] = useState(2);\n  const [color, setColor] = useState('#898989');\n  const [opacity, setOpacity] = useState(0.50);\n  const col = color.replace('#', '');\n  let bigint = parseInt(col, 16);\n  let r = bigint >> 16 & 255;\n  let g = bigint >> 8 & 255;\n  let b = bigint & 255;\n  const colorCode = `rgba(${r},${g},${b},${opacity})`;\n  const cssCode = `${xOffset}px ${yOffset}px ${blurRadius}px ${spread}px ${colorCode}`;\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, React.createElement(ActiveShape, {\n    isActive: true,\n    boxShadow: cssCode,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), shapes.map(item => {\n    const {\n      Shape,\n      isSelected,\n      id\n    } = item;\n    return React.createElement(Shape, {\n      isSelected: isSelected,\n      onClick: () => onClick(id),\n      key: id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    });\n  })), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Input, {\n    label: \"x-offset\",\n    value: xOffset,\n    onChange: value => setXoffset(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"y-offset\",\n    value: yOffset,\n    onChange: value => setYoffset(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"blur radius\",\n    value: blurRadius,\n    onChange: value => setBlurRadius(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"spread\",\n    value: spread,\n    onChange: value => setSpread(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"color\",\n    value: color,\n    onChange: value => setColor(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116\n    },\n    __self: this\n  }), React.createElement(Input, {\n    label: \"opacity\",\n    value: opacity,\n    onChange: value => setOpacity(value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  })), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, \"CSS Rule\"), React.createElement(BorderBox, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, `box-shadow: ${cssCode};`)), React.createElement(CssButton, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, \"Copy\"));\n});\nconst BorderBox = styled.div`\n  border: 1px solid grey;\n  height: 30px;\n  width: 40%;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-top: 10px;\n  align-items: center;\n  margin-top: 10px;\n`;\nconst CssButton = styled.button`\n  \n`;","map":{"version":3,"sources":["/home/anju/devel/css-box-shadow-app/src/Shape.js"],"names":["React","useState","styled","Input","Container","div","Row","Rectangle","props","isActive","isSelected","boxShadow","RoundedRectangle","Circle","shapes","setShapes","id","Shape","ActiveShape","setActiveShape","onClick","updatedShape","map","item","xOffset","setXoffset","yOffset","setYoffset","blurRadius","setBlurRadius","spread","setSpread","color","setColor","opacity","setOpacity","col","replace","bigint","parseInt","r","g","b","colorCode","cssCode","value","BorderBox","CssButton","button"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport styled from 'styled-components';\n\nimport Input from './Input'\n\nconst Container = styled.div`\n  padding: 30px;\n`;\nconst Row = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-bottom: 30px;\n`\n\nconst Rectangle = styled.div`\n  width: ${props => props.isActive ? '300px' : '200px'};\n  height: ${props => props.isActive ? '200px' : '100px'};\n  border: 1px solid black;\n  background-color: ${props => props.isActive || props.isSelected? 'black' : 'transparent'};\n  border-width: thin;\n  border-color: ${props => !props.isSelected && 'grey'};\n  box-shadow: ${props => props.isActive&& props.boxShadow};\n`;\nconst RoundedRectangle = styled.div`\n  width: ${props => props.isActive ? '300px' : '200px'};\n  height: ${props => props.isActive ? '200px' : '100px'};\n  border: 1px solid black;\n  background-color: ${props => props.isActive || props.isSelected? 'black' : 'transparent'};\n  border-width: thin;\n  border-color: ${props => !props.isSelected && 'grey'};\n  border-radius: 20px;\n  box-shadow: ${props => props.isActive&& props.boxShadow};\n`;\nconst Circle = styled.div`\n  width: ${props => props.isActive ? '250px' : '100px'};\n  height: ${props => props.isActive ? '250px' : '100px'};\n  border: 1px solid black;\n  background-color: ${props => props.isActive || props.isSelected? 'black' : 'transparent'};\n  border-width: thin;\n  border-color: ${props => !props.isSelected && 'grey'};\n  border-radius: 100%;\n  box-shadow: ${props => props.isActive&& props.boxShadow};\n`\n\nexport default () => {\n\n  const [shapes, setShapes] = useState([\n    {\n      id: 'rectangle',\n      Shape: Rectangle,\n      isSelected: true\n    },\n    {\n      id: 'rounded-rectangle',\n      Shape: RoundedRectangle,\n      isSelected: false\n    },\n    {\n      id: 'circle',\n      Shape: Circle,\n      isSelected: false\n    }\n  ]);\n\n  const [ActiveShape, setActiveShape] = useState(Rectangle);\n\n  const onClick = (id) => {\n    const updatedShape = shapes.map(item => {\n      if (item.id === id) {\n        setActiveShape(item.Shape);\n        return { ...item, isSelected: true }\n      }else {\n        return { ...item, isSelected: false }\n      }\n    })\n    setShapes(updatedShape);\n  }\n\n  const [xOffset, setXoffset] = useState(0);\n  const [yOffset, setYoffset] = useState(4);\n  const [blurRadius, setBlurRadius] = useState(0);\n  const [spread, setSpread] = useState(2);\n  const [color, setColor] = useState('#898989');\n  const [opacity, setOpacity] = useState(0.50);\n\n  const col = color.replace('#', '');\n  let bigint = parseInt(col, 16);\n  let r = (bigint >> 16) & 255;\n  let g = (bigint >> 8) & 255;\n  let b = bigint & 255;\n\n  const colorCode = `rgba(${r},${g},${b},${opacity})`\n  const cssCode = `${xOffset}px ${yOffset}px ${blurRadius}px ${spread}px ${colorCode}`;\n\n  return(\n    <Container>\n      <Row>\n        <ActiveShape\n          isActive\n          boxShadow={cssCode}\n        />\n        {\n          shapes.map(item => {\n            const { Shape, isSelected, id } = item;\n            return(\n              <Shape isSelected={isSelected} onClick = {()=>onClick(id)} key={id} />\n            )\n          })\n        }\n      </Row>\n      <Row>\n        <Input label='x-offset' value={xOffset} onChange={(value) => setXoffset(value)} />\n        <Input label='y-offset' value={yOffset} onChange={(value) => setYoffset(value)} />\n        <Input label='blur radius' value={blurRadius} onChange={(value) => setBlurRadius(value)} />\n        <Input label='spread' value={spread} onChange={(value) => setSpread(value)} />\n        <Input label='color' value={color} onChange={(value) => setColor(value)} />\n        <Input label='opacity' value={opacity} onChange={(value) => setOpacity(value)} />\n      </Row>\n      <span>CSS Rule</span>\n      <BorderBox>\n        <span>{`box-shadow: ${cssCode};`}</span>\n      </BorderBox>\n      <CssButton>\n        Copy\n      </CssButton>\n    </Container>\n  )\n}\n\nconst BorderBox = styled.div`\n  border: 1px solid grey;\n  height: 30px;\n  width: 40%;\n  padding-left: 10px;\n  padding-right: 10px;\n  padding-top: 10px;\n  align-items: center;\n  margin-top: 10px;\n`;\nconst CssButton = styled.button`\n  \n`\n"]},"metadata":{},"sourceType":"module"}